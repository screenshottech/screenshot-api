# Docker Compose configuration optimized for Dokploy deployment
# This is a streamlined version focused on the main application service
# PostgreSQL and Redis will be managed by Dokploy UI

services:
  # Main Screenshot API Service
  screenshot-api:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: screenshot-api
    restart: unless-stopped

    # Environment variables will be set via Dokploy UI
    environment:
      # Core application settings
      ENVIRONMENT: ${ENVIRONMENT:-PRODUCTION}

      # Server configuration
      HOST: ${HOST:-0.0.0.0}
      PORT: ${PORT:-8080}
      DEVELOPMENT: ${DEVELOPMENT:-false}

      # Database configuration (Dokploy managed)
      DATABASE_USE_IN_MEMORY: false
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DB_POOL_SIZE: ${DB_POOL_SIZE:-30}

      # Redis configuration (Dokploy managed)
      REDIS_USE_IN_MEMORY: false
      REDIS_URL: ${REDIS_URL}
      REDIS_MAX_CONNECTIONS: ${REDIS_MAX_CONNECTIONS:-30}

      # JWT configuration
      JWT_SECRET: ${JWT_SECRET}
      JWT_ISSUER: ${JWT_ISSUER:-screenshotapi-production}
      JWT_AUDIENCE: ${JWT_AUDIENCE:-screenshotapi-production-users}
      JWT_EXPIRATION_HOURS: ${JWT_EXPIRATION_HOURS:-24}

      # Storage configuration
      STORAGE_USE_LOCAL: ${STORAGE_USE_LOCAL:-false}
      STORAGE_LOCAL_PATH: /app/screenshots
      S3_BUCKET: ${S3_BUCKET}
      S3_REGION: ${S3_REGION:-us-east-1}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_ENDPOINT_URL: ${AWS_ENDPOINT_URL}
      AWS_PUBLIC_ENDPOINT_URL: ${AWS_PUBLIC_ENDPOINT_URL}
      AWS_INCLUDE_BUCKET_IN_URL: ${AWS_INCLUDE_BUCKET_IN_URL:-true}

      # Screenshot service configuration (optimized for VPS)
      ENABLE_PDF_GENERATION: ${ENABLE_PDF_GENERATION:-true}
      BROWSER_POOL_SIZE: ${BROWSER_POOL_SIZE:-3}
      MAX_BROWSER_INSTANCES: ${MAX_BROWSER_INSTANCES:-8}
      SCREENSHOT_MAX_WIDTH: ${SCREENSHOT_MAX_WIDTH:-1920}
      SCREENSHOT_MAX_HEIGHT: ${SCREENSHOT_MAX_HEIGHT:-1080}
      SCREENSHOT_DEFAULT_TIMEOUT: ${SCREENSHOT_DEFAULT_TIMEOUT:-30000}
      SCREENSHOT_MAX_TIMEOUT: ${SCREENSHOT_MAX_TIMEOUT:-60000}

      # Retry scheduler configuration
      # Set to false to disable automatic retry processing (useful for debugging)
      RETRY_SCHEDULER_ENABLED: ${RETRY_SCHEDULER_ENABLED:-true}

      # Rate limiting (production optimized)
      RATE_LIMITING_ENABLED: ${RATE_LIMITING_ENABLED:-true}
      RATE_LIMIT_CAPACITY: ${RATE_LIMIT_CAPACITY:-1000}
      RATE_LIMIT_RATE_SECONDS: ${RATE_LIMIT_RATE_SECONDS:-60}

      # Webhook configuration (optimized for production)
      WEBHOOK_MAX_RETRY_ATTEMPTS: ${WEBHOOK_MAX_RETRY_ATTEMPTS:-3}
      WEBHOOK_MAX_TEST_RETRY_ATTEMPTS: ${WEBHOOK_MAX_TEST_RETRY_ATTEMPTS:-1}
      WEBHOOK_TEST_RATE_LIMIT_MINUTES: ${WEBHOOK_TEST_RATE_LIMIT_MINUTES:-1}
      WEBHOOK_RETRY_DELAY_MINUTES: ${WEBHOOK_RETRY_DELAY_MINUTES:-1,5,15,30,60}
      WEBHOOK_TEST_RETRY_DELAY_SECONDS: ${WEBHOOK_TEST_RETRY_DELAY_SECONDS:-30}
      WEBHOOK_TIMEOUT_SECONDS: ${WEBHOOK_TIMEOUT_SECONDS:-30}

      # Stripe configuration
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      BILLING_PORTAL_RETURN_URL: ${BILLING_PORTAL_RETURN_URL:-http://localhost:3000/billing}

      # Clerk authentication
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      CLERK_PUBLISHABLE_KEY: ${CLERK_PUBLISHABLE_KEY}
      CLERK_DOMAIN: ${CLERK_DOMAIN}

      # Auth provider configuration (CRITICAL for AuthProviderFactory)
      DEFAULT_AUTH_PROVIDER: ${DEFAULT_AUTH_PROVIDER:-local}
      ENABLED_AUTH_PROVIDERS: ${ENABLED_AUTH_PROVIDERS:-local}

      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-INFO}

      # Security headers
      ENABLE_SECURITY_HEADERS: ${ENABLE_SECURITY_HEADERS:-true}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      CORS_MAX_AGE: ${CORS_MAX_AGE:-3600}

      # Monitoring
      SENTRY_DSN: ${SENTRY_DSN}

    # Expose port for Dokploy
    ports:
      - "8080:8080"

    # Volumes for persistent data
    volumes:
      # Screenshots storage (persistent)
      - screenshot_files:/app/screenshots
      # Application logs (persistent)
      - app_logs:/app/logs
      # Browser cache (for performance)
      - browser_cache:/app/.cache

    # Health check configuration
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3

    # Resource limits (adjust based on your VPS specs)
    deploy:
      resources:
        limits:
          # Adjust based on your Hostinger VPS plan
          memory: 2G
          cpus: '1.5'
        reservations:
          memory: 1G
          cpus: '0.5'

    # Security settings
    security_opt:
      - no-new-privileges:true

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"

# Named volumes for persistent data
volumes:
  screenshot_files:
    driver: local
  app_logs:
    driver: local
  browser_cache:
    driver: local

# Network configuration (Dokploy will handle this)
networks:
  default:
    name: dokploy-network
    external: true
